using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libsass"], :libsass_so),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/piever/SassBuilder/releases/download/v0.2.0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/SassBuilder.v0.1.0.aarch64-linux-gnu.tar.gz", "9e42719fa3cdbc9c5ab244008b4b7d10a9cef6691c14ead28f1eb4e1e208c6c2"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/SassBuilder.v0.1.0.aarch64-linux-musl.tar.gz", "310f15f5ff07b7792a3b9d40820e292fe8a95955a31c654a83a8cbb5a0fbf5d1"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/SassBuilder.v0.1.0.arm-linux-gnueabihf.tar.gz", "9c045f5e7008b2351ea22fd768068e44c6afec6c3f43a7af511af395572a12b3"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/SassBuilder.v0.1.0.arm-linux-musleabihf.tar.gz", "c1fba28dc8aa6c8b8dee5f678fef28a4ec6d628f33112d670636613894b3659e"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/SassBuilder.v0.1.0.i686-linux-gnu.tar.gz", "ea726178f42cd2c42e424dc1d266f21dbf70fd689a2a8e5bc4fc3cbe1f9909ca"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/SassBuilder.v0.1.0.i686-linux-musl.tar.gz", "00fc1109dce2fc21a3789d18e9d768a272cebbba4e2f1e347d90af75b7e475d9"),
    Windows(:i686) => ("$bin_prefix/SassBuilder.v0.1.0.i686-w64-mingw32.tar.gz", "e2b77b7ea232e913cbe53d2619556b4574b654015c2bbd0b246562a38e00f827"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/SassBuilder.v0.1.0.powerpc64le-linux-gnu.tar.gz", "2dc817c7231e3a45730dc62d81daa8311869fa1f86e611c3bf8696717440c175"),
    MacOS(:x86_64) => ("$bin_prefix/SassBuilder.v0.1.0.x86_64-apple-darwin14.tar.gz", "3bf07c97888ae7ed888e3dd522d045dccd10d45cbe68d655ab28c86b66863185"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/SassBuilder.v0.1.0.x86_64-linux-gnu.tar.gz", "b9673d6a53fc94f918dec2301e92a2d03c17e738738c065f17ef9dea62b9568a"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/SassBuilder.v0.1.0.x86_64-linux-musl.tar.gz", "0ed53927d8442bb0c9f625c22457c3fc4fa13e1897200f1d7326bfacb8708f52"),
    FreeBSD(:x86_64) => ("$bin_prefix/SassBuilder.v0.1.0.x86_64-unknown-freebsd11.1.tar.gz", "dfb2190ddc980f323b98b560979aa83708b4f647f04450a462c94b5f698df1a6"),
    Windows(:x86_64) => ("$bin_prefix/SassBuilder.v0.1.0.x86_64-w64-mingw32.tar.gz", "c862d375c760ee201da644426b6cdf9276e164964646fb25fa052cb73e2706e4"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
